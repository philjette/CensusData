View(gdp)
gdp<-read.table("gdp.csv",sep=",",quote="\"",header=TRUE)
View(gdp)
eds<-read.table("eds.csv",sep=",",quote="\"",header=TRUE)
View(eds)
Names(gdp)<-c("CountryCode","Ranking","Econ","GDP","X")
merged<-merge(gdp,eds,c("code","CountryCode"))
merged<-merge(gdp,eds,by=c("code","CountryCode"))
merged<-merge(gdp,eds,by=c("Code","CountryCode"))
colnames(gdp)<-c("CountryCode","Ranking","Econ","GDP","X")
merged<-merge(gdp,eds,by="CountryCode")
View(merged)
install.package("quantmod")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
amzn[row.names="^2012"]
newdata <- amzn[ which(amzn$row.names=='^2012'), ]
View(newdata)
grep[amzn$row.names,'2102']
grep[amzn$row.names,'2012']
grep[amzn$row.names,"2012":]
grep[amzn$row.names,"2012"]
grep[amzn[,1],"2012"]
test<-amzn[row.names>="2012-01-01" & date<="2012-12-31"]
test<-amzn$row.names
test<-amzn[,1]
View(test)
write.table(amzn,"amzn.csv", sep=",", header=TRUE)
write.table(amzn,"amzn.csv", sep=",")
test<-row.names(amzn)
View(amzn)
write.table(amzn,"amzn.csv", sep="," row.names=TRUE)
write.table(amzn,"amzn.csv", sep=",", row.names=TRUE)
test<-amzn['2012']
?rnum
nrow(amzn)
View(test)
grep("*June*", merged$Special.Notes)
count(grep("*June*", merged$Special.Notes))
grep("*end: June*", merged$Special.Notes)
merged$Special.Notes[96]
merged$Special.Notes[95]
merged$Special.Notes[117]
merged$Special.Notes[grep("*June*", merged$Special.Notes)]
merged$Special.Notes[grep("*june*", merged$Special.Notes)]
grep("*end: june*", merged$Special.Notes)
grep("*end: June*", eds$Special.Notes)
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
head(mtcars)
qplot(clarity, data=diamonds, fill=cut, geom="bar")
qplot(clarity, data=diamonds, fill=cut, geom="line")
qplot(clarity, data=diamonds, fill=cut, geom="bar")
qplot(clarity, data=diamonds, geom="bar")
qplot(wt, mpg, data=mtcars)
qplot(wt, mpg, data=mtcars, aplha=qsec)
qplot(wt, mpg, data=mtcars, alpha=qsec)
qplot(wt, mpg, data=mtcars, color=cyl)
mu=1100
mu<=1100
mu<-1100
sd<-30
dof<-8
error <- qt(0.975,df=dof)*sd/sqrt(9)
mu+error
mu-error
graph(-2+qt(0.975,df=dof)*x/3)
plot(-2+qt(0.975,df=dof)*x/3)
x<-c(1.5,.3,2.6,2.1)
plot(-2+qt(0.975,df=dof)*x/3)
plot(qt(0.975,df=dof)*x/3)
plot(qt(0.975,df=dof)*x/3)
plot(-2+qt(0.975,df=dof)*x/3)
-2+qt(0.975,df=dof)*2.1/3
-2+qt(0.975,df=dof)*2.6/3
-2+qt(0.975,df=dof)*.3/3
-2+qt(0.975,df=dof)*1.5/3
mu<--2
sd<--.08
n=20
error <- qt(0.975,df=n-1)*sd/sqrt(n)
mu-error
mu<-3
sd<-.6
n=10
error <- qt(0.975,df=n-1)*sd/sqrt(n)
mu-error
mu+error
mu<-5
sd<-.68
error <- qt(0.975,df=n-1)*sd/sqrt(n)
mu-error
mu+error
2.570786-3.429214
nx = 10
ny = 10
mx = 3
my = 5
Sx2 = 0.6
Sy2 = 0.68
Sr = sqrt(((nx-1)*Sx2+(ny-1)*Sy2)/(nx+ny-2))
ans = mx - my + c(-1,1) * qt(0.975, df = nx + ny - 2) * Sr * sqrt(1/nx+1/ny)
round(ans, 2)
nx = 100
ny = 100
mx = 4
my = 6
Sx2 = 0.5
Sy2 = 2
Sr = sqrt(((nx-1)*Sx2+(ny-1)*Sy2)/(nx+ny-2))
ans = my - mx + c(-1,1) * qt(0.975, df = nx + ny - 2) * Sr * sqrt(1/nx+1/ny)
round(ans, 2)
nD = 9
nP = 9
mD = -3
mP = 1
sD = 1.5
sP = 1.8
Sr = sqrt(((nD-1)*sD^2+(nP-1)*sP^2)/(nD+nD-2))
ans = mD - mP + c(-1,1) * qt(0.9, df = nD + nP - 2) * Sr * sqrt(1/nD+1/nP)
nD = 9
nP = 9
mD = -3
mP = 1
sD = 1.5
sP = 1.8
Sr = sqrt(((nD-1)*sD^2+(nP-1)*sP^2)/(nD+nD-2))
ans = mD - mP + c(-1,1) * qt(0.9, df = nD + nP - 2) * Sr * sqrt(1/nD+1/nP)
ans
Sr
ans = mD - mP + c(-1,1) * qt(0.95, df = nD + nP - 2) * Sr * sqrt(1/nD+1/nP)
ans
install.packages("rmarkdown")
install.packages("knitr")
set.seed(100)
lambda = 0.2
n = 40
trials = 1000
data = matrix(rexp(n*trials, lambda), nrow = trials, ncol = n)
dataset = data.frame(means = apply(data, 1, mean), sds = apply(data, 1, sd))
rexp(40,.2)
?mean
mean(rexp(40,.2))
?sd
sd(rexp(40,.2))
df <- data.frame(matrix(ncol = 2, nrow = 1000))
for (i in 1:1000) {
df[i,1]<-mean(rexp(40,.2))
df[i,2]<-sd(rexp(40,.2))
}
View(df)
mean[,1]
mean(df[,1])
1/.2
mean(df[,2])
library(ggplot2)
p<-ggplot(df, aes(1))
p + layer(geom="line")
p<-ggplot(df, aes(df[,1])) + layer(geom="line")
library(ggplot2)
require(gridExtra)
m = mean(dataset$means)
s = sd(dataset$means)
p1 <- ggplot(dataset, aes(x=means)) + xlim(2,8)
p1 <- p1 + geom_histogram(aes(y=..density..), color="black", fill="white", binwidth = lambda)
p1 <- p1 + stat_function(fun = dnorm, args=list(mean = m, sd = s), color="blue")
p1 <- p1 + geom_vline(xintercept = c(m-s, m+s), color="magenta")
p1 <- p1 + geom_vline(xintercept = c(m))
m = mean(dataset$sds)
s = sd(dataset$sds)
p2 <- ggplot(dataset, aes(x=sds)) + xlim(2,8)
p2 <- p2 + geom_histogram(aes(y=..density..), color="black", fill="white", binwidth = lambda)
p2 <- p2 + stat_function(fun = dnorm, args=list(mean = m, sd = s), color="blue")
p2 <- p2 + geom_vline(xintercept = c(m-s, m+s), color="magenta")
p2 <- p2 + geom_vline(xintercept = c(m))
#pushViewport(viewport(layout = grid.layout(1, 2,heights=unit(0.25, "npc"))))
grid.arrange(p1, p2, ncol=2)
library(ggplot2)
df <- data.frame(matrix(ncol = 2, nrow = 1000))
df(names)
col.names(df) <-c("means","sd")
colnames(df) <-c("means","sd")
head(df)
df <- data.frame(matrix(ncol = 2, nrow = 1000))
colnames(df) <-c("mean","sd")
for (i in 1:1000) {
df[i,1]<-mean(rexp(40,.2))
df[i,2]<-sd(rexp(40,.2))
}
m = mean(df$mean)
s = sd(df$mean)
p1 <- ggplot(dataset, aes(x=mean)) + xlim(2,8)
p1 <- p1 + geom_histogram(aes(y=..density..), color="black", fill="white", binwidth = .2)
p1 <- p1 + stat_function(fun = dnorm, args=list(mean = m, sd = s), color="blue")
p1 <- p1 + geom_vline(xintercept = c(m-s, m+s), color="magenta")
p1 <- p1 + geom_vline(xintercept = c(m))
p1
df <- data.frame(matrix(ncol = 2, nrow = 1000))
colnames(df) <-c("mean","sd")
for (i in 1:1000) {
df[i,1]<-mean(rexp(40,.2))
df[i,2]<-sd(rexp(40,.2))
}
m = mean(df$mean)
s = sd(df$mean)
p1 <- ggplot(df, aes(x=mean)) + xlim(2,8)
p1 <- p1 + geom_histogram(aes(y=..density..), color="black", fill="white", binwidth = .2)
p1 <- p1 + stat_function(fun = dnorm, args=list(mean = m, sd = s), color="blue")
p1 <- p1 + geom_vline(xintercept = c(m-s, m+s), color="magenta")
p1 <- p1 + geom_vline(xintercept = c(m))
p1
df <- data.frame(matrix(ncol = 2, nrow = 1000))
colnames(df) <-c("mean","sd")
for (i in 1:1000) {
df[i,1]<-mean(rexp(40,.2))
df[i,2]<-sd(rexp(40,.2))
}
m = mean(df$mean)
s = sd(df$mean)
p1 <- ggplot(df, aes(x=mean)) + xlim(2,8)
p1 <- p1 + geom_histogram(aes(y=..density..), color="black", fill="white", binwidth = .2)
p1 <- p1 + stat_function(fun = dnorm, args=list(mean = m, sd = s), color="blue")
p1
df <- data.frame(matrix(ncol = 2, nrow = 1000))
colnames(df) <-c("mean","sd")
for (i in 1:1000) {
df[i,1]<-mean(rexp(40,.2))
df[i,2]<-sd(rexp(40,.2))
}
m = mean(df$mean)
s = sd(df$mean)
p1 <- ggplot(df, aes(x=mean)) + xlim(2,8)
p1 <- p1 + geom_histogram(aes(y=..density..), color="black", fill="white", binwidth = .2)
p1 <- p1 + stat_function(fun = dnorm, args=list(mean = m, sd = s), color="blue")
mean(means$x) + c(-1,1)*1.96*sd(means$x)/sqrt(nrow(means))
df <- data.frame(matrix(ncol = 2, nrow = 1000))
colnames(df) <-c("mean","sd")
for (i in 1:1000) {
df[i,1]<-mean(rexp(40,.2))
df[i,2]<-sd(rexp(40,.2))
}
m = mean(df$mean)
s = sd(df$mean)
p1 <- ggplot(df, aes(x=mean)) + xlim(2,8)
p1 <- p1 + geom_histogram(aes(y=..density..), color="black", fill="white", binwidth = .2)
p1 <- p1 + stat_function(fun = dnorm, args=list(mean = m, sd = s), color="blue")
mean(df$mean) + c(-1,1)*1.96*sd(df$mean)/sqrt(nrow(df))
getwd()
library(ToothGrowth)
head(ToothGrowth)
hist(ToothGrowth$len)
summary(ToothGrowth)
data(ToothGrowth)
str(ToothGrowth)
summary(ToothGrowth)
Histogram of ToothGrowth$len
hist(ToothGrowth$len)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
View(ToothGrowth)
qplot(ToothGrowth$dose, ToothGrowth$supp, data=ToothGrowth, colour=dose)
qplot(ToothGrowth$sup, ToothGrowth$len, data=ToothGrowth, colour=dose)
qplot(ToothGrowth$sup, ToothGrowth$len, data=ToothGrowth, geom="bar", fill=dose)
qplot(ToothGrowth$len, data=ToothGrowth, geom="bar", fill=dose)
qplot(ToothGrowth$lsupp, data=ToothGrowth, geom="bar", fill=dose)
qplot(ToothGrowth$supp, data=ToothGrowth, geom="bar", fill=dose)
library("lattice")
bwplot(len ~ dose | supp)
bwplot(ToothGrowth$len ~ ToothGrowth$dose | ToothGrowth$supp)
bwplot(ToothGrowth$len ~ ToothGrowth$supp | ToothGrowth$supp)
bwplot(ToothGrowth$len ~ ToothGrowth$supp | ToothGrowth$dose)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
vcg1<-tooth$len[1:10]
vcg2<-tooth$len[11:20]
vcg3<-tooth$len[21:30]
oj1<-tooth$len[31:40]
oj2<-tooth$len[41:50]
oj3<-tooth$len[51:60]
difference<-oj1-vcg1
mn<-mean(difference)
s<-sd(difference)
n<-10
mn + c(-1,1)*qt(.975, n-1)*s/sqrt(n)
t.test(difference)
data(ToothGrowth)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
vcg1<-tooth$len[1:10]
vcg2<-tooth$len[11:20]
vcg3<-tooth$len[21:30]
oj1<-tooth$len[31:40]
oj2<-tooth$len[41:50]
oj3<-tooth$len[51:60]
diff<-oj1-vcg1
mn<-mean(diff)
s<-sd(diff)
n<-10
mn + c(-1,1)*qt(.975, n-1)*s/sqrt(n)
t.test(diff)
data(ToothGrowth)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
vcg1<-tooth$len[1:10]
vcg1<-ToothGrowth$len[1:10]
oj1<-ToothGrowth$len[31:40]
diff<-oj1-vcg1
mn<-mean(diff)
s<-sd(diff)
n<-10
mn + c(-1,1)*qt(.975, n-1)*s/sqrt(n)
t.test(diff)
diff<-oj2-vcg2
mn<-mean(diff)
s<-sd(diff)
n<-10
vcg2<-ToothGrowth$len[11:20]
oj2<-ToothGrowth$len[41:50]
diff<-oj2-vcg2
mn<-mean(diff)
s<-sd(diff)
n<-10
mn + c(-1,1)*qt(.975, n-1)*s/sqrt(n)
t.test(diff)
diff<-oj3-vcg3
mn<-mean(diff)
s<-sd(diff)
n<-10
vcg3<-ToothGrowth$len[21:30]
oj3<-ToothGrowth$len[51:60]
diff<-oj3-vcg3
mn<-mean(diff)
s<-sd(diff)
n<-10
mn + c(-1,1)*qt(.975, n-1)*s/sqrt(n)
t.test(diff)
install.packages("lattice")
getwd()
install.packages("party")
install.packages("caret")
install.packages("pROC")
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
View(data.train)
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
install.packages("e1071")
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
source('~/NISRCTrees.R')
getwd()
countries<-read.csv("allCountries.csv", sep=",")
countries<-read.csv("allCountries.txt", sep=",")
source('~/.active-rstudio-document')
source('~/GitHub/CensusData/commuters.R')
setwd("~/GitHub/CensusData")
source('~/GitHub/CensusData/commuters.R')
View(agg_state)
source('~/GitHub/CensusData/commuters.R')
View(states)
source('~/GitHub/CensusData/commuters.R')
View(agg_state)
download.file("http://www.megafileupload.com/5pa8/states.csv", "states.csv")
source('~/GitHub/CensusData/commuters.R')
head(census_comp)
test<-cbind(states_st, states_id)
states_st<-c('01','02','04','05','06','08','09','10','11','12','13','15','16','17','18','19','20','21',
'22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38',
'39','40','41','42','44','45','46','47','48','49','50','51','53','54','55','56','72')
states_id<-c('Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware',
'District of Columbia','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas',
'Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi',
'Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina',
'North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee',
'Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming','Puerto Rico')
test<-cbind(states_st, states_id)
View(test)
source('~/GitHub/CensusData/commuters.R')
source('~/GitHub/CensusData/commuters.R')
View(states)
names(states)<-c("ST", "id")
View(states)
clas(states)
class(states)
states<-as.data.frame(cbind(states_st, states_id))
class(states)
source('~/GitHub/CensusData/commuters.R')
class(census_comp$ST)
class(states$ST)
states<-as.data.frame(cbind(as.numeric(states_st), states_id))
class(states$ST)
View(states)
names(states)<-c("ST", "id")
View(test)
class(states)
View(states)
census_comp<-merge(census_comp, states, all=FALSE, by=c("ST"))
class(census_comp$ST)
states<-as.data.frame(cbind(as.numeric(states_st), states_id))
names(states)<-c("ST", "id")
class(states$ST)
test<-as.numeric(states$ST)
states$ST<-as.numeric(states$ST)
View(states)
states_st<-c('1','2','4','5','6','8','9','10','11','12','13','15','16','17','18','19','20','21',
'22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38',
'39','40','41','42','44','45','46','47','48','49','50','51','53','54','55','56','72')
states_id<-c('Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware',
'District of Columbia','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas',
'Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi',
'Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina',
'North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee',
'Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming','Puerto Rico')
states<-as.data.frame(cbind(states_st, states_id))
View(states)
names(states)<-c("ST", "id")
View(states)
states$ST<-as.numeric(states$ST)
View(states)
states_st<-c(1,2,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,
39,40,41,42,44,45,46,47,48,49,50,51,53,54,55,56,72)
states_id<-c('Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware',
'District of Columbia','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas',
'Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi',
'Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina',
'North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee',
'Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming','Puerto Rico')
states<-as.data.frame(cbind(states_st, states_id))
names(states)<-c("ST", "id")
class(states$ST)
View(states)
states$ST<-as.numeric(states$ST)
View(states)
states_st<-c(1,2,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,
39,40,41,42,44,45,46,47,48,49,50,51,53,54,55,56,72)
states<-as.data.frame(cbind(states_st, states_id))
states<-as.data.frame(cbind(as.numeric(states_st), states_id))
View(states)
names(states)<-c("ST", "id")
class(states$ST)
View(states)
census_comp<-merge(census_comp, states, all=FALSE, by=c("ST"))
states$ST<-as.numeric(levels(states$ST))[states$ST]
View(states)
census_comp<-merge(census_comp, states, all=FALSE, by=c("ST"))
#I'm interested in commuters, so let's get rid of NAs on JWMNP
census_comp<-filter(census_comp, JWMNP !="NA")
download.file("http://biogeo.ucdavis.edu/data/gadm2.7/rds/USA_adm1.rds", "USA_adm1.rds")
source('~/GitHub/CensusData/commuters.R')
source('~/GitHub/CensusData/commuters.R')
View(agg_state)
head(np_dist)
np_dist <- fortify(np_dist, region = "NAME_1")
np_dist<-subset(np_dist, id!="Puerto Rico" & id!="Alaska")
statecenters <- ddply(np_dist, .(id), summarize, clat = mean(lat), clong = mean(long))
#map the results
ggplot() + geom_map(data = agg_state, aes(map_id = id, fill = Travel_time),
map = np_dist) + expand_limits(x = np_dist$long, y = np_dist$lat) +
geom_text(data = statecenters, aes(x = clong, y = clat, label = id, size = 0.1))
ggplot(census_comp, aes(x=SEX, y=WAGP)) + geom_boxplot()
ggplot(census_comp, aes(x=SEX, y=WAGP)) + geom_boxplot() +scale_y_continuous(trans=loge_trans())
ggplot(census_comp, aes(x=SEX, y=WAGP)) + geom_boxplot() + + scale_x_continuous(labels = comma)
require(scales)
ggplot(census_comp, aes(x=SEX, y=WAGP)) + geom_boxplot() + + scale_x_continuous(labels = comma)
ggplot(census_comp, aes(x=SEX, y=WAGP)) + geom_boxplot() + scale_x_continuous(labels = comma)
ggplot(census_comp, aes(x=SEX, y=WAGP)) + geom_boxplot() + scale_y_continuous(labels = comma)
ggplot(census_comp, aes(x=SEX, y=JWMNP)) + geom_boxplot()
aggregate(census_comp$JWMNP, by=list(census_comp$SEX), FUN=median, na.rm=TRUE)
aggregate(census_comp$JWMNP, by=list(census_comp$SEX), FUN=mean, na.rm=TRUE)
install.packages("choroplethr")
install.packages("readr")
# Take the mean of JWMNP by State
agg_state <-aggregate(census_comp$JWMNP, by=list(census_comp$id), FUN=mean, na.rm=TRUE)
names(agg_state)<-c("region", "value")
agg_state<-subset(agg_state, region!="Puerto Rico" & region!="Alaska")
View(agg_state)
map <- state_choropleth(agg_state,
title      = "States with highest density of immigrants",
legend     = "Population",
num_colors = 1)
map <- choropleth(agg_state,
title      = "States with highest density of immigrants",
legend     = "Population",
num_colors = 1)
library(choroplethr)
library(readr)
map <- state_choropleth(agg_state,
title      = "States with highest density of immigrants",
legend     = "Population",
num_colors = 1)
install.packages("choroplethrMaps")
map <- state_choropleth(agg_state,
title      = "States with highest density of immigrants",
legend     = "Population",
num_colors = 1)
agg_state$region<-tolower(agg_state$region)
map <- state_choropleth(agg_state,
title      = "States with highest density of immigrants",
legend     = "Population",
num_colors = 1)
ggsave("immigration_map.png", map, height=8, width=12, units="in")
aggregate(census_comp$JWMNP, by=list(census_comp$SEX), FUN=median, na.rm=TRUE)
worst<-head(arrange(agg_state, desc(value)),1)
worst
best<- head(arrange(agg_state, value),1)
best
